import { bodyMassIndex } from '.';

describe(bodyMassIndex.name, () => {
    it.each([
        [80, 1.8, 'Normal'],
        [122.9927135046239, 1.971886738316433, 'Obese'],
        [47.76400028728103, 1.7443595306912532, 'Underweight'],
        [67.40638793558524, 1.9959108443599183, 'Underweight'],
        [78.13871273465756, 1.548257844163371, 'Obese'],
        [40.81105900331996, 1.5536394773263749, 'Underweight'],
        [101.25009356489912, 1.7286351533323718, 'Obese'],
        [81.33613156537447, 1.8989550388205432, 'Normal'],
        [68.39242911374467, 1.8331644726420788, 'Normal'],
        [94.76801670304187, 1.795866455205404, 'Overweight'],
        [125.777423277242, 1.970087982314416, 'Obese'],
        [67.21305469140542, 1.794389859752335, 'Normal'],
        [81.12395356513044, 1.829163501470217, 'Normal'],
        [64.08257047710339, 1.8412798117163107, 'Normal'],
        [61.386063067745226, 1.608446042241708, 'Normal'],
        [115.30645635039981, 1.841101350982868, 'Obese'],
        [81.74349130990123, 1.9268151559789792, 'Normal'],
        [70.60200343559187, 1.8480581203210065, 'Normal'],
        [87.60069117964682, 1.8423155007922674, 'Overweight'],
        [54.824462017216796, 1.7426463373811323, 'Underweight'],
        [119.89575404646698, 1.9022791915782662, 'Obese'],
        [72.95873935664413, 1.8146711801793902, 'Normal'],
        [69.64513070715634, 1.9088802526346227, 'Normal'],
        [103.03566378129392, 1.8548075394987364, 'Overweight'],
        [46.102915689332974, 1.708079745446394, 'Underweight'],
        [71.22502590253363, 1.815998780106038, 'Normal'],
        [68.50596284115217, 1.8438846418113681, 'Normal'],
        [49.18606442938809, 1.6800047356928998, 'Underweight'],
        [56.84922224413644, 1.521754572571171, 'Normal'],
        [71.24625195089773, 1.8244680977795824, 'Normal'],
        [41.125110752071, 1.599224099724745, 'Underweight'],
        [72.2987477998995, 1.769698728307501, 'Normal'],
        [47.33675849710216, 1.5623272392420184, 'Normal'],
        [64.93789031749976, 1.6710784842803879, 'Normal'],
        [103.25241606815531, 1.842201905022301, 'Obese'],
        [108.17098711314192, 1.81177916594593, 'Obese'],
        [52.212333831720905, 1.5122975837623795, 'Normal'],
        [111.60315509452542, 1.9591512233652901, 'Overweight'],
        [65.53441544387508, 1.5261194367050765, 'Overweight'],
        [57.498830034224035, 1.745143132276688, 'Normal'],
        [48.19144105577783, 1.7451518144148737, 'Underweight'],
        [39.413551357875896, 1.5120629881281729, 'Underweight'],
        [47.2003585251792, 1.6323854975959458, 'Underweight'],
        [78.66462393882554, 1.6996912767061727, 'Overweight'],
        [87.54088815744417, 1.9262137460042816, 'Normal'],
        [60.53468751707924, 1.7999919813856462, 'Normal'],
        [115.10019772957997, 1.859207536125945, 'Obese'],
        [70.40527750971758, 1.6306849996762534, 'Overweight'],
        [86.88154888811539, 1.9240873557324347, 'Normal'],
        [72.0108531727871, 1.9066053993126464, 'Normal'],
        [59.35975892463076, 1.7458699323283564, 'Normal'],
        [71.87945882385318, 1.6430653743651362, 'Overweight'],
        [79.52050151105388, 1.535933118581525, 'Obese'],
        [78.12803440922261, 1.9876535344170447, 'Normal'],
        [59.50962278584389, 1.9707043236025323, 'Underweight'],
        [55.07579760290897, 1.853864634368208, 'Underweight'],
        [62.42129432708699, 1.795215241022161, 'Normal'],
        [79.9123484012904, 1.6839894237110213, 'Overweight'],
        [55.970517662098544, 1.9248094437499383, 'Underweight'],
        [70.88488455066827, 1.9213689271822023, 'Normal'],
        [72.18510811352148, 1.722868667193242, 'Normal'],
        [79.19063388458108, 1.717906967390617, 'Overweight'],
        [92.37214593111783, 1.7521942453534995, 'Obese'],
        [53.546577713557376, 1.6001035825372076, 'Normal'],
        [60.35422215009723, 1.6679209299636728, 'Normal'],
        [60.38990250505476, 1.5021594624072003, 'Overweight'],
        [83.29528729325283, 1.8072618777373082, 'Overweight'],
        [56.5314548577795, 1.5999139211504418, 'Normal'],
        [56.04839221056646, 1.7678785421943628, 'Underweight'],
        [85.98962603603437, 1.9570878720196352, 'Normal'],
        [70.91185977370088, 1.5815456161779582, 'Overweight'],
        [54.963653353283085, 1.8275486983853102, 'Underweight'],
        [62.2801167946873, 1.7736189101115807, 'Normal'],
        [56.94684904105764, 1.5309122880928419, 'Normal'],
        [56.650599736347175, 1.524593375167068, 'Normal'],
        [46.31863676681273, 1.674376117282932, 'Underweight'],
        [90.50475970701122, 1.7051306928610135, 'Obese'],
        [78.95598331267031, 1.5378024759660103, 'Obese'],
        [70.1781927791627, 1.5419650330865124, 'Overweight'],
        [79.37563380850906, 1.7802873174515568, 'Overweight'],
        [90.11517371687367, 1.7612505768870144, 'Overweight'],
        [104.81494168064812, 1.8500917283026266, 'Obese'],
        [82.45047601269404, 1.6268698794917493, 'Obese'],
        [92.69541564444431, 1.6664715667560808, 'Obese'],
        [60.93509236623527, 1.6780772414185026, 'Normal'],
        [72.37434187628287, 1.7923161803399137, 'Normal'],
        [118.78884911218087, 1.9705760345992913, 'Obese'],
        [79.23801444900604, 1.5509208797781655, 'Obese'],
        [108.34424428082492, 1.898936413796959, 'Obese'],
        [93.72943634397042, 1.760790969549498, 'Obese'],
        [51.07859626964522, 1.7628278115255993, 'Underweight'],
        [80.52210186000613, 1.783120181472671, 'Overweight'],
        [55.6791146956192, 1.6092084987891655, 'Normal'],
        [83.96462472138302, 1.6273767769892233, 'Obese'],
        [112.16884252920231, 1.7916455363037591, 'Obese'],
        [104.90548880648143, 1.9372571067750277, 'Overweight'],
        [58.670555117465845, 1.6858904941498292, 'Normal'],
        [79.4593055902139, 1.5127082819706157, 'Obese'],
        [57.19325406258569, 1.7988233270124276, 'Underweight'],
        [47.39047900865847, 1.728183330088402, 'Underweight'],
        [60.829339402674506, 1.5528598380931653, 'Overweight'],
    ])(
        'should return correct BMI for height %s and weight %s; BMI = %s',
        (weight, height, bmi) => {
            expect(bodyMassIndex(weight, height)).toBe(bmi);
        },
    );
});
